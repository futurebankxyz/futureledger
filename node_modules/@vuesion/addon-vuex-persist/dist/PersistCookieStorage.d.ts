import { IVuexPersistStorage } from './vuex-persist';
import { CookieAttributes } from 'js-cookie';
interface IPersistCookieStorageConfig {
    cookieOptions: CookieAttributes;
    beforePersist?: (state: any) => any;
}
export declare class PersistCookieStorage implements IVuexPersistStorage {
    private static indexKey;
    modules: string[];
    prefix: string;
    length: number;
    options: IPersistCookieStorageConfig;
    forceInitialState: boolean;
    [key: string]: any;
    [index: number]: string;
    static getCookiesFromState(cookies: any, state: any): Array<{
        name: string;
        value: string;
    }>;
    static getMergedStateFromServerContext<T>(cookies: any, state: any): T;
    constructor(modules?: string[], options?: IPersistCookieStorageConfig, prefix?: string);
    private getKey;
    private getIndex;
    private addToIndex;
    private removeFromIndex;
    clear(): void;
    getItem(key: string): string | null;
    key(index: number): string | null;
    removeItem(key: string): void;
    setItem(key: string, data: string): void;
    beforePersist(state: any): any;
}
export {};
