"use strict";
const path = require("path");
const path_1 = require("@vuesion/utils/dist/path");
const fileSystem_1 = require("@vuesion/utils/dist/fileSystem");
const models_1 = require("@vuesion/models");
module.exports = {
    description: 'Add a single file component',
    prompts: [
        {
            type: 'input',
            name: 'name',
            message: 'What should it be called?',
            validate: (value) => {
                if (!value || value.length === 0) {
                    return 'name is required';
                }
                return fileSystem_1.folderExists(path_1.runtimeRoot(path.join(models_1.VuesionConfig.generators.outputDirectory, value)))
                    ? `folder already exists (${value})`
                    : true;
            },
        },
        {
            type: 'confirm',
            name: 'storybook',
            default: true,
            message: 'Do you want a storybook?',
        },
    ],
    actions: (data) => {
        const filePath = data.name.split('/');
        data.componentName = filePath.pop();
        data.basePath = path.join(process.cwd(), models_1.VuesionConfig.generators.outputDirectory, filePath.join('/'));
        const actions = [
            {
                type: 'add',
                path: '{{basePath}}/{{properCase componentName}}/{{properCase componentName}}.vue',
                templateFile: path.join(process.cwd(), models_1.VuesionConfig.generators.blueprintDirectory, 'component/component.vue.hbs'),
                abortOnFail: true,
            },
            {
                type: 'add',
                path: '{{basePath}}/{{properCase componentName}}/{{properCase componentName}}.spec.ts',
                templateFile: path.join(process.cwd(), models_1.VuesionConfig.generators.blueprintDirectory, 'component/component.spec.ts.hbs'),
                abortOnFail: true,
            },
        ];
        if (data.storybook) {
            actions.push({
                type: 'add',
                path: '{{basePath}}/{{properCase componentName}}/{{properCase componentName}}.stories.ts',
                templateFile: path.join(process.cwd(), models_1.VuesionConfig.generators.blueprintDirectory, 'component/component.stories.ts.hbs'),
                abortOnFail: true,
            });
        }
        return actions;
    },
};
