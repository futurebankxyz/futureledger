"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTranslationsFromString = (content) => {
    const result = [];
    let matches = content.match(/\$t\(.*\/\*[\S,\s]*?\*\/\)/gm) || [];
    matches = matches.concat(content.match(/\$t\(\s.*\s.*\s.*\s.*\)/gm) || []);
    /**
     * handle multiple comments
     */
    const removeIdxs = [];
    matches.forEach((match, idx) => {
        if (match.indexOf('*/,') > -1) {
            removeIdxs.push(idx);
            match.split('*/,').forEach((m) => {
                if (m.indexOf('$t(') > -1) {
                    result.push(m.trim() + ' */');
                }
            });
        }
    });
    removeIdxs.forEach((idx) => delete matches[idx]);
    /**
     * handle if statements
     */
    matches.forEach((match) => match.split(' : ').forEach((m) => result.push(m.trim())));
    return result;
};
exports.sanitizeMessage = (message) => {
    const replacements = [
        { from: /\s\s+/g, to: ' ' },
        { from: '/*', to: '' },
        { from: '*/', to: '' },
        { from: /\[/g, to: '<' },
        { from: /\]/g, to: '>' },
        { from: /"/g, to: '\\"' },
    ];
    replacements.forEach((replacement) => {
        message = message.replace(replacement.from, replacement.to);
    });
    return message.trim();
};
exports.getTranslationObject = (matches) => {
    const translations = {};
    matches.forEach((translation) => {
        const id = translation.match(/'\S*'/);
        const comment = translation.match(/\/\*[\S\s]*\*\//);
        const key = id && id[0].replace(/[\\']/g, '');
        const value = comment && comment[0];
        if (key && value) {
            translations[key] = exports.sanitizeMessage(value);
        }
    });
    return translations;
};
