"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("../decorators/command");
const process_1 = require("@vuesion/utils/dist/process");
const ui_1 = require("@vuesion/utils/dist/ui");
let Lint = class Lint {
    async run(args, options) {
        const spinner = new ui_1.Spinner();
        spinner.message = 'Linting files...';
        spinner.start(options.debug);
        process.argv = [process.argv[0], null, '--fix', '-c', 'tslint.json', '-p', 'tsconfig.json', ...args];
        try {
            require('tslint/lib/tslintCli.js');
            spinner.message = 'All files passed linting';
            spinner.stop();
        }
        catch (e) {
            process_1.handleProcessError(e, spinner);
        }
    }
};
Lint = __decorate([
    command_1.Command({
        name: 'lint',
        alias: 'l',
        description: 'Lint project files.',
    })
], Lint);
exports.Lint = Lint;
