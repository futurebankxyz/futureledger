import { JSONModel } from './JSONModel';
interface IVuesionConfig extends Object {
    currentVersion: string;
    generators: {
        blueprintDirectory: string;
        outputDirectory: string;
        routerFile: string;
        stateFile: string;
    };
    i18n: {
        defaultLocale: string;
        supportedLocales: string[];
    };
    clean: string[];
    prettier: {
        extensions: string;
    };
    webpack: {
        aliases: {
            [key: string]: string;
        };
    };
    spa: {
        appShellRoute: string;
        additionalRoutes: string[];
    };
    devServer: {
        watchOptions: any;
    };
}
declare class Model extends JSONModel<IVuesionConfig> implements IVuesionConfig {
    clean: string[];
    currentVersion: string;
    devServer: {
        watchOptions: any;
    };
    generators: {
        blueprintDirectory: string;
        outputDirectory: string;
        routerFile: string;
        stateFile: string;
    };
    i18n: {
        defaultLocale: string;
        supportedLocales: string[];
    };
    prettier: {
        extensions: string;
    };
    spa: {
        appShellRoute: string;
        additionalRoutes: string[];
    };
    webpack: {
        aliases: {
            [p: string]: string;
        };
    };
    constructor();
    getWebpackAliases(): any;
    updateCurrentVersion(currentVersion: string): void;
    getCustomWebpackConfig(config: any, target?: string): any;
}
export declare const VuesionConfig: Model;
export {};
