{"version":3,"sources":["../../src/react/index.js"],"names":["React","Component","isObservable","observe","WrappedComponent","observedValues","subscriptions","prop","state","unsubscribe","setState","props","subscription","subscribe","value","err","console","error","componentDidMount","subscribeToProp","componentWillUnmount","componentDidUpdate","prevProps","render","accum","curr","createElement"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,OAAO,SAASC,OAAT,CAAiBC,gBAAjB,EAAmC;AAAA;;AACxC,iBAAO,cAAcH,SAAd,CAAwB;AAAA;AAAA;;AAAA,qCACrB;AACNI,QAAAA,cAAc,EAAE,EADV;AAENC,QAAAA,aAAa,EAAE;AAFT,OADqB;;AAAA,2CAMfC,IAAI,IAAI;AACpB,cAAMD,aAAa,GAAG,EAAE,GAAG,KAAKE,KAAL,CAAWF;AAAhB,SAAtB;AACA,YAAIA,aAAa,CAACC,IAAD,CAAjB,EAAyBD,aAAa,CAACC,IAAD,CAAb,CAAoBE,WAApB;AACzB,eAAOH,aAAa,CAACC,IAAD,CAApB;AAEA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA;AAAF,SAAd;AACD,OAZ4B;;AAAA,+CAcXC,IAAI,IAAI;AACxB,YAAI,CAACL,YAAY,CAAC,KAAKS,KAAL,CAAWJ,IAAX,CAAD,CAAjB,EAAqC;AAErC,cAAMK,YAAY,GAAG,KAAKD,KAAL,CAAWJ,IAAX,EAAiBM,SAAjB,CACnBC,KAAK,IAAI;AACP,eAAKJ,QAAL,CAAcF,KAAK,KAAK;AACtBH,YAAAA,cAAc,EAAE,EACd,GAAGG,KAAK,CAACH,cADK;AAEd,eAACE,IAAD,GAAQO;AAFM;AADM,WAAL,CAAnB;AAMD,SARkB,EASnBC,GAAG,IAAI;AACL;AACAC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,SAZkB,CAArB;AAeA,aAAKL,QAAL,CAAc;AACZJ,UAAAA,aAAa,EAAE,EACb,GAAG,KAAKE,KAAL,CAAWF,aADD;AAEb,aAACC,IAAD,GAAQK;AAFK;AADH,SAAd;AAMD,OAtC4B;AAAA;;AAwC7BM,IAAAA,iBAAiB,GAAG;AAAA;;AAClB,uDAAY,KAAKP,KAAjB,kBAAgC,KAAKQ,eAArC;AACD;;AAEDC,IAAAA,oBAAoB,GAAG;AAAA;;AACrB,wDAAY,KAAKZ,KAAL,CAAWF,aAAvB,mBAA8CM,YAAY,IAAI;AAC5D,aAAKH,WAAL,CAAiBG,YAAjB;AACD,OAFD;AAGD;;AAEDS,IAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA;;AAC5B,wDAAYA,SAAZ,mBAA+Bf,IAAI,IAAI;AACrC,YAAI,CAACe,SAAS,CAACf,IAAD,CAAV,IAAoB,KAAKI,KAAL,CAAWJ,IAAX,CAAxB,EAA0C;AACxC,eAAKY,eAAL,CAAqBZ,IAArB;AACD,SAFD,MAEO,IAAIe,SAAS,CAACf,IAAD,CAAT,KAAoB,KAAKI,KAAL,CAAWJ,IAAX,CAAxB,EAA0C;AAC/C,eAAKE,WAAL,CAAiBF,IAAjB;AACA,eAAKY,eAAL,CAAqBZ,IAArB;AACD;AACF,OAPD;AAQD;;AAEDgB,IAAAA,MAAM,GAAG;AAAA;;AACP,YAAMZ,KAAK,GAAG,iDAAY,KAAKA,KAAjB,mBAA+B,CAACa,KAAD,EAAQC,IAAR,KAAiB;AAC5D,YAAI,CAACvB,YAAY,CAAC,KAAKS,KAAL,CAAWc,IAAX,CAAD,CAAjB,EAAqC;AACnCD,UAAAA,KAAK,CAACC,IAAD,CAAL,GAAc,KAAKd,KAAL,CAAWc,IAAX,CAAd;AACA,iBAAOD,KAAP;AACD;;AACD,eAAOA,KAAP;AACD,OANa,EAMX,EANW,CAAd;;AAQA,aAAOxB,KAAK,CAAC0B,aAAN,CAAoBtB,gBAApB,EAAsC,EAC3C,GAAGO,KADwC;AAE3C,WAAG,KAAKH,KAAL,CAAWH;AAF6B,OAAtC,CAAP;AAID;;AA1E4B,GAA/B;AA4ED","sourcesContent":["import React, { Component } from \"react\";\nimport { isObservable } from \"rxjs\";\n\nexport function observe(WrappedComponent) {\n  return class extends Component {\n    state = {\n      observedValues: {},\n      subscriptions: {}\n    };\n\n    unsubscribe = prop => {\n      const subscriptions = { ...this.state.subscriptions };\n      if (subscriptions[prop]) subscriptions[prop].unsubscribe();\n      delete subscriptions[prop];\n\n      this.setState({ subscriptions });\n    };\n\n    subscribeToProp = prop => {\n      if (!isObservable(this.props[prop])) return;\n\n      const subscription = this.props[prop].subscribe(\n        value => {\n          this.setState(state => ({\n            observedValues: {\n              ...state.observedValues,\n              [prop]: value\n            }\n          }));\n        },\n        err => {\n          // TODO: pass the error to the wrapped component\n          console.error(err);\n        }\n      );\n\n      this.setState({\n        subscriptions: {\n          ...this.state.subscriptions,\n          [prop]: subscription\n        }\n      });\n    };\n\n    componentDidMount() {\n      Object.keys(this.props).forEach(this.subscribeToProp);\n    }\n\n    componentWillUnmount() {\n      Object.keys(this.state.subscriptions).forEach(subscription => {\n        this.unsubscribe(subscription);\n      });\n    }\n\n    componentDidUpdate(prevProps) {\n      Object.keys(prevProps).forEach(prop => {\n        if (!prevProps[prop] && this.props[prop]) {\n          this.subscribeToProp(prop);\n        } else if (prevProps[prop] !== this.props[prop]) {\n          this.unsubscribe(prop);\n          this.subscribeToProp(prop);\n        }\n      });\n    }\n\n    render() {\n      const props = Object.keys(this.props).reduce((accum, curr) => {\n        if (!isObservable(this.props[curr])) {\n          accum[curr] = this.props[curr];\n          return accum;\n        }\n        return accum;\n      }, {});\n\n      return React.createElement(WrappedComponent, {\n        ...props,\n        ...this.state.observedValues\n      });\n    }\n  };\n}\n"],"file":"index.js"}